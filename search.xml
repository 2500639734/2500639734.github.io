<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>MongoDB入门</title>
      <link href="/2019/03/11/MongoDB%E5%85%A5%E9%97%A8/"/>
      <url>/2019/03/11/MongoDB%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="windows下安装mongodb"><a href="#windows下安装mongodb" class="headerlink" title="windows下安装mongodb"></a>windows下安装mongodb</h1><ul><li><p><a href="https://www.mongodb.com/" target="_blank" rel="noopener">下载mongodb,安装版安装到指定目录,解压版解压到指定目录,过程略</a></p></li><li><p><a href="https://studio3t.com" target="_blank" rel="noopener">下载mongodb客户端连接工具studio3t,过程略</a></p></li><li><p>mongodb根目录下创建数据存放目录data,日志存放目录logs,日志存放文件mongo.log</p></li><li><p>mongodb根目录下创建配置文件mongo.conf,配置如下</p></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据库存放目录</span></span><br><span class="line"><span class="attr">dbpath</span>=d:\MongoDB\Server\<span class="number">3.4</span>\data</span><br><span class="line"><span class="comment">#日志存放目录</span></span><br><span class="line"><span class="attr">logpath</span>=d:\MongoDB\Server\<span class="number">3.4</span>\logs\mongo.log</span><br><span class="line"><span class="comment">#错误日志采用追加模式</span></span><br><span class="line"><span class="attr">logappend</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#启用日志文件,默认启动</span></span><br><span class="line"><span class="attr">journal</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#这个选项可以过滤掉一些无用的日志信息,若需要调试使用请设置为false</span></span><br><span class="line"><span class="attr">quiet</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#端口号 默认为27017 </span></span><br><span class="line"><span class="attr">port</span>=<span class="number">27017</span></span><br></pre></td></tr></table></figure><ul><li><p>windows安装mongodb服务<br><code>mongod.exe --config &quot;d:\path\mongodb\mongo.conf&quot; --install</code></p></li><li><p>windows启动MongoDB服务<br><code>net start MongoDB</code></p></li><li><p>windows停止MongoDB服务<br><code>net stop MongoDB</code></p></li><li><p>windows卸载MongoDB服务<br><code>&quot;d:\path\mongodb\bin\mongod.exe --remove&quot;</code></p></li><li><p>windows验证MongoDB服务<br><code>浏览器访问http://localhost:27017, 可以正常访问服务安装成功</code></p></li><li><p>windows验证MongoDB服务方式一<br><code>进入bin执行mongo.exe连接</code></p></li><li><p>windows验证MongoDB服务方式二<br><code>使用studio3t工具连接,类似navicat,略</code></p></li></ul><hr><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><ul><li>mongodb中是通过数据库、集合、文档的方式来管理数据,下边是mongodb与关系数据库的一些概念对比</li></ul><table><thead><tr><th>SQL术语/概念</th><th>mongodb术语/概念</th><th>解释/说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>feld</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接（MongoDB不支持）</td></tr><tr><td>primary key</td><td>primary key</td><td>主键,MongoDB自动在每个集合中添加_id的主键</td></tr></tbody></table><ul><li>总结<br>一个mongodb实例可以创建多个数据库<br>一个数据库可以创建多个集合<br>一个集合可以包括多个文档</li></ul><hr><h1 id="连接mongodb"><a href="#连接mongodb" class="headerlink" title="连接mongodb"></a>连接mongodb</h1><ul><li><p>命令方式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mongodb://[<span class="string">username:password@</span>]host1[<span class="string">:port1</span>][<span class="symbol">,host2[:port2</span>],...[<span class="string">,hostN[:portN</span>]]][<span class="string">/[database</span>][<span class="symbol">? options</span>]]</span><br><span class="line"></span><br><span class="line">命令格式:</span><br><span class="line">mongodb:// 固定前缀 username：账号,可不填</span><br><span class="line">password：密码,可不填 host：主机名或ip地址,只有host主机名为必填项。</span><br><span class="line">port：端口,可不填,默认27017 /database：连接某一个数据库 ?options：连接参数,key/value对</span><br><span class="line"></span><br><span class="line">例子:</span><br><span class="line">mongodb://localhost // 连接本地数据库27017端口   </span><br><span class="line">mongodb://root:itcast@localhost // 使用用户名root密码为itcast连接本地数据库27017端口   </span><br><span class="line">mongodb://localhost,localhost:27018,localhost:27019 // 连接三台主从服务器,端口为27017、27018、2701</span><br></pre></td></tr></table></figure></li><li><p>使用mongodb自带的javascript shell（mongo.exe）连接</p></li><li><p>使用studio3T连接</p></li><li><p>使用java程序连接 </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入maven依赖,版本自定</span></span><br><span class="line"><span class="params">&lt;dependency&gt;</span></span><br><span class="line"><span class="params">&lt;groupId&gt;</span>org.mongodb<span class="params">&lt;/groupId&gt;</span></span><br><span class="line"><span class="params">&lt;artifactId&gt;</span>mongo-java-driver<span class="params">&lt;/artifactId&gt;</span></span><br><span class="line"><span class="params">&lt;version&gt;</span><span class="number">3.4</span><span class="number">.3</span><span class="params">&lt;/version&gt;</span> </span><br><span class="line"><span class="params">&lt;/dependency&gt;</span></span><br><span class="line"></span><br><span class="line">@Test </span><br><span class="line">public void testConnection()&#123;</span><br><span class="line"><span class="comment">// 创建mongodb 客户端</span></span><br><span class="line">MongoClient mongoClient = new MongoClient( <span class="string">"localhost"</span> , <span class="number">27017</span> );</span><br><span class="line"><span class="comment">// 或者采用连接字符串</span></span><br><span class="line"><span class="comment">//MongoClientURI connectionString = new MongoClientURI("mongodb://root:root@localhost:27017");</span></span><br><span class="line"><span class="comment">//MongoClient mongoClient = new MongoClient(connectionString);</span></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">MongoDatabase database = mongoClient.getDatabase(<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">// 连接collection集合</span></span><br><span class="line">MongoCollection<span class="params">&lt;Document&gt;</span> collection = database.getCollection(<span class="string">"student"</span>);</span><br><span class="line"><span class="comment">// 查询第一个文档</span></span><br><span class="line">Document myDoc = collection.find().first();</span><br><span class="line"><span class="comment">// 得到文件内容(json)</span></span><br><span class="line">String json = myDoc.toJson();     </span><br><span class="line">System.out.println(json);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><ul><li><p>查询数据库</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> dbs <span class="comment">// 查询全部数据库</span></span><br><span class="line"></span><br><span class="line">db <span class="comment">// 显示当前数据库</span></span><br></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: use DATABASE_NAME</span></span><br><span class="line"><span class="comment">// 有test数据库则切换到此数据库,没有则创建</span></span><br><span class="line"><span class="comment">// 新创建的数据库不显示,需要至少包括一个集合</span></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">test</span></span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.dropDatabase()</span></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">test</span> <span class="comment">// 先切换数据库</span></span><br><span class="line"><span class="keyword">db</span>.dropDatabase() <span class="comment">// 再执行删除</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h1><ul><li><p>集合相当于关系数据库中的表,一个数据库可以创建多个集合,一个集合是将相同类型的文档管理起来</p></li><li><p>创建集合</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.createCollection(name, options) </span></span><br><span class="line"><span class="comment">// name: 新创建的集合名称</span></span><br><span class="line"><span class="comment">// options: 创建参数</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.createCollection</span>(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除集合</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.collection.drop() </span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.drop</span>() <span class="comment">// 删除student集合</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h1><ul><li><p>mongodb中文档的格式是json格式,下边就是一个文档,包括两个key：_id主键和name</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;      </span><br><span class="line"><span class="attr">"_id"</span> : ObjectId(<span class="string">"5b2cc4bfa6a44812707739b5"</span>),      </span><br><span class="line"><span class="attr">"name"</span> : <span class="string">"张三"</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>插入命令</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.COLLECTION_NAME.insert(document)</span></span><br><span class="line"><span class="comment">// 同一个集合中的文档的key可以不相同！但是建议设置为相同的</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.insert</span>(&#123;<span class="string">"name"</span>:<span class="string">"张三"</span>,<span class="string">"age"</span>:<span class="number">10</span>&#125;) <span class="comment">// 插入文档数据到student集合</span></span><br></pre></td></tr></table></figure></li><li><p>更新文档</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 命令格式:</span><br><span class="line">db.collection.<span class="keyword">update</span>(</span><br><span class="line">&lt;query&gt;,</span><br><span class="line">&lt;<span class="keyword">update</span>&gt;, </span><br><span class="line">&lt;options&gt; </span><br><span class="line">) </span><br><span class="line">query:查询条件,相当于sql语句的<span class="keyword">where</span>  </span><br><span class="line"><span class="keyword">update</span>：更新文档内容 </span><br><span class="line">options：选项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// <span class="number">1</span>.替换文档:先删除再插入</span><br><span class="line">// 符合条件 <span class="string">"name"</span>:<span class="string">"张三"</span>的第一个文档替换为&#123;<span class="string">"name"</span>:<span class="string">"李四"</span>,<span class="string">"age"</span>:<span class="number">20</span>&#125;。</span><br><span class="line">db.student.<span class="keyword">update</span>(&#123;<span class="string">"name"</span>:<span class="string">"李四"</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"李四"</span>,<span class="string">"age"</span>:<span class="number">20</span>&#125;)</span><br><span class="line"></span><br><span class="line">// 使用$set修改器指定要更新的key,key不存在则创建,存在则更新</span><br><span class="line">// 符合条件 <span class="string">"name"</span>:<span class="string">"北京黑马程序"</span>的所有文档更新name和age的值</span><br><span class="line">// multi: <span class="literal">false</span>表示更新第一个匹配的文档,<span class="literal">true</span>表示更新所有匹配的文档</span><br><span class="line">db.student.<span class="keyword">update</span>(&#123;<span class="string">"name"</span>:<span class="string">"张三"</span>&#125;,&#123;$set:&#123;<span class="string">"name"</span>:<span class="string">"李四"</span>,<span class="string">"age"</span>:<span class="number">20</span>&#125;&#125;,&#123;multi:true&#125;)</span><br></pre></td></tr></table></figure></li><li><p>删除文档</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.student.remove(&lt;query&gt;) </span></span><br><span class="line"><span class="comment">// query: 删除条件,相当于sql语句中的where</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.删除所有文档</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.remove</span>(&#123;&#125;)</span><br><span class="line"><span class="comment">// 2.删除符合条件的文档</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.remove</span>(&#123;<span class="string">"name"</span>:<span class="string">"张三"</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询文档</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式: db.collection.find(query, projection)</span></span><br><span class="line"><span class="comment">// query: 查询条件,可不填 </span></span><br><span class="line"><span class="comment">// projection: 投影查询key,可不填</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.查询全部</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.find</span>()</span><br><span class="line"><span class="comment">// 2.查询符合条件的记录(查询name等为"张三"的文档)</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.remove</span>(&#123;<span class="string">"name"</span>:<span class="string">"张三"</span>&#125;) </span><br><span class="line"><span class="comment">// 3.投影查询(只显示name和age两个key,_id主键不显示)</span></span><br><span class="line">db<span class="selector-class">.student</span><span class="selector-class">.find</span>(&#123;<span class="string">"name"</span>:<span class="string">"张三"</span>&#125;,&#123;name:<span class="number">1</span>,age:<span class="number">1</span>,_id:<span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h1><ul><li><p>创建用户</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式:</span></span><br><span class="line">mongo&gt;db.createUser( </span><br><span class="line">&#123;</span><br><span class="line"><span class="symbol">user:</span> <span class="string">"&lt;name&gt;"</span>,</span><br><span class="line"><span class="symbol">  pwd:</span> <span class="string">"&lt;cleartext password&gt;"</span>,</span><br><span class="line"><span class="symbol">  customData:</span> &#123; <span class="params">&lt;any information&gt;</span> &#125;,</span><br><span class="line"><span class="symbol">  roles:</span> [     &#123; role: <span class="string">"&lt;role&gt;"</span>, db: <span class="string">"&lt;database&gt;"</span> &#125; | <span class="string">"&lt;role&gt;"</span>,</span><br><span class="line">      ...   </span><br><span class="line">  ]</span><br><span class="line">    &#125; </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建root用户,角色为root</span></span><br><span class="line">use admin db.createUser(</span><br><span class="line">      &#123;        </span><br><span class="line"><span class="symbol">user:</span><span class="string">"root"</span>,        </span><br><span class="line"><span class="symbol">pwd:</span><span class="string">"root"</span>,        </span><br><span class="line"><span class="symbol">roles:</span>[&#123;role:<span class="string">"root"</span>,db:<span class="string">"admin"</span>&#125;]      </span><br><span class="line">  &#125;   </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内置角色如下:</span></span><br><span class="line"><span class="comment">// 1. 数据库用户角色：read、readWrite; </span></span><br><span class="line"><span class="comment">// 2. 数据库管理角色：dbAdmin、dbOwner、userAdmin；</span></span><br><span class="line"><span class="comment">// 3. 集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager； </span></span><br><span class="line"><span class="comment">// 4. 备份恢复角色：backup、restore； </span></span><br><span class="line"><span class="comment">// 5. 所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、 dbAdminAnyDatabase </span></span><br><span class="line"><span class="comment">// 6. 超级用户角色：root</span></span><br></pre></td></tr></table></figure></li><li><p>查询用户</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询当前库下的所有用户</span></span><br><span class="line"><span class="keyword">show</span> users</span><br></pre></td></tr></table></figure></li><li><p>删除用户</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 命令格式: <span class="built_in">db</span>.dropUser(<span class="string">"用户名"</span>)</span><br><span class="line">// 删除<span class="keyword">test</span>用户</span><br><span class="line"><span class="built_in">db</span>.dropUser(<span class="string">"test"</span>)</span><br></pre></td></tr></table></figure></li><li><p>修改用户</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令格式:</span></span><br><span class="line"><span class="keyword">db</span>.updateUser(   </span><br><span class="line"><span class="string">"&lt;username&gt;"</span>,   </span><br><span class="line">&#123;     </span><br><span class="line">customData : &#123; &lt;any information&gt; &#125;,     </span><br><span class="line">roles : [               </span><br><span class="line">&#123; role: <span class="string">"&lt;role&gt;"</span>, <span class="keyword">db</span>: <span class="string">"&lt;database&gt;"</span> &#125; | <span class="string">"&lt;role&gt;"</span>,</span><br><span class="line">              ...             </span><br><span class="line">],     </span><br><span class="line"><span class="keyword">pwd</span>: <span class="string">"&lt;cleartext password&gt;"</span>     </span><br><span class="line">&#125;,     </span><br><span class="line">writeConcern: &#123; </span><br><span class="line">&lt;write concern&gt; </span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改root用户的角色为readWriteAnyDatabase</span></span><br><span class="line"><span class="keyword">use</span> admin </span><br><span class="line"><span class="keyword">db</span>.updateUser(<span class="string">"root"</span>,&#123;roles:[&#123;role:<span class="string">"readWriteAnyDatabase"</span>,<span class="keyword">db</span>:<span class="string">"admin"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 命令格式: db.changeUserPassword(<span class="string">"username"</span>,<span class="string">"newPasswd"</span>)</span><br><span class="line"><span class="regexp">//</span> 修改root用户的密码为<span class="number">123</span></span><br><span class="line">use admin </span><br><span class="line">db.changeUserPassword(<span class="string">"root"</span>,<span class="string">"123"</span>)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="设置登陆认证"><a href="#设置登陆认证" class="headerlink" title="设置登陆认证"></a>设置登陆认证</h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.创建用户</span></span><br><span class="line"><span class="selector-tag">use</span> <span class="selector-tag">admin</span> <span class="selector-tag">db</span><span class="selector-class">.createUser</span>(      </span><br><span class="line">&#123;        </span><br><span class="line"><span class="attribute">user</span>:<span class="string">"root"</span>,        </span><br><span class="line"><span class="attribute">pwd</span>:<span class="string">"root"</span>,        </span><br><span class="line"><span class="attribute">roles</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">role</span>:<span class="string">"root"</span>,</span><br><span class="line"><span class="attribute">db</span>:<span class="string">"admin"</span></span><br><span class="line">&#125;</span><br><span class="line">]      </span><br><span class="line">&#125;   </span><br><span class="line">)</span><br><span class="line"><span class="comment">// 2.停止MongoDB服务</span></span><br><span class="line"><span class="comment">// 3.mongo.conf配置文件增加auth=true配置项</span></span><br><span class="line"><span class="comment">// 4.开启MongoDB服务</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MongoDB基础入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> db </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git版本管理工具使用</title>
      <link href="/2019/02/22/Git%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/02/22/Git%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="配置用户信息"><a href="#配置用户信息" class="headerlink" title="配置用户信息"></a>配置用户信息</h1><p><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code></p><h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><p><code>git init</code></p><h1 id="添加文件到仓库"><a href="#添加文件到仓库" class="headerlink" title="添加文件到仓库"></a>添加文件到仓库</h1><p><code>git add readme.txt</code></p><h1 id="提交文件到仓库"><a href="#提交文件到仓库" class="headerlink" title="提交文件到仓库"></a>提交文件到仓库</h1><p><code>git commit -m &quot;wrote a readme file&quot;</code></p><h1 id="查看仓库当前状态"><a href="#查看仓库当前状态" class="headerlink" title="查看仓库当前状态"></a>查看仓库当前状态</h1><p><code>git status</code></p><h1 id="查看对文件所做的修改"><a href="#查看对文件所做的修改" class="headerlink" title="查看对文件所做的修改"></a>查看对文件所做的修改</h1><p><code>git diff readme.txt</code></p><h1 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h1><p><code>git log</code><br><code>git log --pretty=oneline</code></p><h1 id="回退到历史版本"><a href="#回退到历史版本" class="headerlink" title="回退到历史版本"></a>回退到历史版本</h1><p><code>git reset --hard HEAD^</code><br><code>git reset --hard HEAD^^</code><br><code>git reset --hard HEAD^^^</code><br><code>git reset --hard HEAD~100</code><br><code>git reset --hard b4982cd</code></p><h1 id="查看历史命令"><a href="#查看历史命令" class="headerlink" title="查看历史命令"></a>查看历史命令</h1><p><code>git reflog</code></p><h1 id="查看工作区版本和版本库最新版本的区别"><a href="#查看工作区版本和版本库最新版本的区别" class="headerlink" title="查看工作区版本和版本库最新版本的区别"></a>查看工作区版本和版本库最新版本的区别</h1><p><code>git diff HEAD -- readme.txt</code></p><h1 id="撤销工作区修改-回退到最近一次add或commit时的状态"><a href="#撤销工作区修改-回退到最近一次add或commit时的状态" class="headerlink" title="撤销工作区修改,回退到最近一次add或commit时的状态"></a>撤销工作区修改,回退到最近一次add或commit时的状态</h1><p><code>git checkout -- readme.txt</code></p><h1 id="撤销暂存区修改"><a href="#撤销暂存区修改" class="headerlink" title="撤销暂存区修改"></a>撤销暂存区修改</h1><p><code>git reset HEAD readme.txt</code></p><h1 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h1><p><code>git rm</code></p><h1 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h1><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></p><h1 id="ssh方式添加远程仓库"><a href="#ssh方式添加远程仓库" class="headerlink" title="ssh方式添加远程仓库"></a>ssh方式添加远程仓库</h1><p><code>git remote add origin git@github.com:2500639734/learngit.git</code></p><h1 id="推送指定分支到远程仓库同时关联本地和远程分支-第一次"><a href="#推送指定分支到远程仓库同时关联本地和远程分支-第一次" class="headerlink" title="推送指定分支到远程仓库同时关联本地和远程分支,第一次"></a>推送指定分支到远程仓库同时关联本地和远程分支,第一次</h1><p><code>git push -u origin master</code></p><h1 id="推送指定分支到远程仓库"><a href="#推送指定分支到远程仓库" class="headerlink" title="推送指定分支到远程仓库"></a>推送指定分支到远程仓库</h1><p><code>git push origin master</code></p><h1 id="ssh方式克隆远程仓库"><a href="#ssh方式克隆远程仓库" class="headerlink" title="ssh方式克隆远程仓库"></a>ssh方式克隆远程仓库</h1><p><code>git clone &quot;your respoitory address&quot;</code></p><h1 id="提交过程"><a href="#提交过程" class="headerlink" title="提交过程"></a>提交过程</h1><p>-》 <code>add</code>加入文件到暂存区 -》 <code>commit</code> -》 暂存区文件提交到本地仓库 -》 <code>push</code> 本地仓库文件推送到远程仓库</p><h1 id="创建dev分支"><a href="#创建dev分支" class="headerlink" title="创建dev分支"></a>创建dev分支</h1><p><code>git branch dev</code></p><h1 id="切换到dev分支"><a href="#切换到dev分支" class="headerlink" title="切换到dev分支"></a>切换到dev分支</h1><p><code>git checkouu dev</code></p><h1 id="创建并切换到dev分支"><a href="#创建并切换到dev分支" class="headerlink" title="创建并切换到dev分支"></a>创建并切换到dev分支</h1><p><code>git checkout -b dev</code></p><h1 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h1><p><code>git branch</code></p><h1 id="dev分支合并到当前分支"><a href="#dev分支合并到当前分支" class="headerlink" title="dev分支合并到当前分支"></a>dev分支合并到当前分支</h1><p><code>git merge dev</code></p><h1 id="合并分支禁用Fast-forward模式"><a href="#合并分支禁用Fast-forward模式" class="headerlink" title="合并分支禁用Fast forward模式"></a>合并分支禁用Fast forward模式</h1><p><code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code></p><h1 id="删除dev分支"><a href="#删除dev分支" class="headerlink" title="删除dev分支"></a>删除dev分支</h1><p><code>git branch -d dev</code></p><h1 id="删除未合并的分支"><a href="#删除未合并的分支" class="headerlink" title="删除未合并的分支"></a>删除未合并的分支</h1><p><code>git branch -D feature</code></p><h1 id="查看分支图"><a href="#查看分支图" class="headerlink" title="查看分支图"></a>查看分支图</h1><p><code>git log --graph</code></p><h1 id="查看分支图简要"><a href="#查看分支图简要" class="headerlink" title="查看分支图简要"></a>查看分支图简要</h1><p><code>git log --graph --pretty=oneline --abbrev-commit</code></p><h1 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h1><p>手动修改合并失败的文件 -》 提交 -》 合并 -》 删除分支</p><h1 id="储存当前工作区并在当前分支下创建临时分支"><a href="#储存当前工作区并在当前分支下创建临时分支" class="headerlink" title="储存当前工作区并在当前分支下创建临时分支"></a>储存当前工作区并在当前分支下创建临时分支</h1><p><code>git stash</code><br><code>git checkout -b issue-101</code></p><h1 id="查看储存的工作区"><a href="#查看储存的工作区" class="headerlink" title="查看储存的工作区"></a>查看储存的工作区</h1><p><code>git stash list</code></p><h1 id="恢复储存的工作区"><a href="#恢复储存的工作区" class="headerlink" title="恢复储存的工作区"></a>恢复储存的工作区</h1><p><code>git stash apply</code></p><h1 id="删除储存的工作区"><a href="#删除储存的工作区" class="headerlink" title="删除储存的工作区"></a>删除储存的工作区</h1><p><code>git stash drop</code></p><h1 id="恢复并删除储存的工作区"><a href="#恢复并删除储存的工作区" class="headerlink" title="恢复并删除储存的工作区"></a>恢复并删除储存的工作区</h1><p><code>git stash pop</code></p><h1 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h1><p><code>git remote</code></p><h1 id="查看远程仓库详细信息"><a href="#查看远程仓库详细信息" class="headerlink" title="查看远程仓库详细信息"></a>查看远程仓库详细信息</h1><p><code>git remote -v</code></p><h1 id="推送本地master分支到远程仓库-远程仓库默认名称origin-没有权限则不显示地址"><a href="#推送本地master分支到远程仓库-远程仓库默认名称origin-没有权限则不显示地址" class="headerlink" title="推送本地master分支到远程仓库,远程仓库默认名称origin,没有权限则不显示地址"></a>推送本地master分支到远程仓库,远程仓库默认名称origin,没有权限则不显示地址</h1><p><code>git push origin master</code></p><h1 id="克隆远程仓库的dev分支到本地"><a href="#克隆远程仓库的dev分支到本地" class="headerlink" title="克隆远程仓库的dev分支到本地"></a>克隆远程仓库的dev分支到本地</h1><p><code>git checkout -b dev origin/dev</code></p><h1 id="推送本地dev分支的修改到远程仓库"><a href="#推送本地dev分支的修改到远程仓库" class="headerlink" title="推送本地dev分支的修改到远程仓库"></a>推送本地dev分支的修改到远程仓库</h1><p><code>git push origin dev</code></p><h1 id="合并远程仓库dev分支"><a href="#合并远程仓库dev分支" class="headerlink" title="合并远程仓库dev分支"></a>合并远程仓库dev分支</h1><p><code>git branch --set-upstream-to=origin/dev dev</code><br><code>git pull</code></p><h1 id="多人协作流程"><a href="#多人协作流程" class="headerlink" title="多人协作流程"></a>多人协作流程</h1><p>推送本地修改 <code>git push origin &lt;branch-name&gt;</code>  -》 推送失败尝试合并 <code>git pull</code>  -》 合并冲突则解决冲突,并在本地提交  -》 <code>git push origin &lt;branch-name&gt;</code>再次推送<br><code>git pull</code>提示<code>no tracking information</code>,则说明本地分支和远程分支的链接关系没有创建,用命令<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code></p><h1 id="本地未push的分叉提交历史整理成直线"><a href="#本地未push的分叉提交历史整理成直线" class="headerlink" title="本地未push的分叉提交历史整理成直线"></a>本地未push的分叉提交历史整理成直线</h1><p><code>git rebase</code></p><h1 id="当前分支打上标签"><a href="#当前分支打上标签" class="headerlink" title="当前分支打上标签"></a>当前分支打上标签</h1><p><code>git tag v1.0</code></p><h1 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h1><p><code>git tag</code></p><h1 id="查看标签信息"><a href="#查看标签信息" class="headerlink" title="查看标签信息"></a>查看标签信息</h1><p><code>git show v1.0</code></p><h1 id="当前分支历史提交记录打上标签"><a href="#当前分支历史提交记录打上标签" class="headerlink" title="当前分支历史提交记录打上标签"></a>当前分支历史提交记录打上标签</h1><p><code>git tag v0.9 f52c633</code></p><h1 id="删除本地标签"><a href="#删除本地标签" class="headerlink" title="删除本地标签"></a>删除本地标签</h1><p><code>git tag -d v0.9</code></p><h1 id="推送v1-0标签到远程仓库"><a href="#推送v1-0标签到远程仓库" class="headerlink" title="推送v1.0标签到远程仓库"></a>推送v1.0标签到远程仓库</h1><p><code>git push origin v1.0</code></p><h1 id="一次性推送尚未推送到远程仓库的标签"><a href="#一次性推送尚未推送到远程仓库的标签" class="headerlink" title="一次性推送尚未推送到远程仓库的标签"></a>一次性推送尚未推送到远程仓库的标签</h1><p><code>git push origin --tags</code></p><h1 id="删除远程仓库标签"><a href="#删除远程仓库标签" class="headerlink" title="删除远程仓库标签"></a>删除远程仓库标签</h1><p><code>git tag -d v0.9</code><br><code>git push origin :refs/tags/v0.9</code></p><h1 id="git终端显示颜色"><a href="#git终端显示颜色" class="headerlink" title="git终端显示颜色"></a>git终端显示颜色</h1><p><code>git config --global color.ui true</code></p><h1 id="忽略文件-根目录加入-gitignore文件配置"><a href="#忽略文件-根目录加入-gitignore文件配置" class="headerlink" title="忽略文件,根目录加入.gitignore文件配置"></a>忽略文件,根目录加入.gitignore文件配置</h1><p><code>.gitignore</code></p><h1 id="检查-gitignore文件是否正确"><a href="#检查-gitignore文件是否正确" class="headerlink" title="检查.gitignore文件是否正确"></a>检查.gitignore文件是否正确</h1><p><code>git check-ignore</code></p><h1 id="强制添加已设定被忽略的文件"><a href="#强制添加已设定被忽略的文件" class="headerlink" title="强制添加已设定被忽略的文件"></a>强制添加已设定被忽略的文件</h1><p><code>git add -f App.class</code></p><h1 id="配置命令别名"><a href="#配置命令别名" class="headerlink" title="配置命令别名"></a>配置命令别名</h1><p><code>git config --global alias.st status</code><br><code>git config --global alias.co checkout</code><br><code>git config --global alias.ci commit</code><br><code>git config --global alias.br branch</code><br><code>git config --global alias.unstage &#39;reset HEAD&#39;</code><br><code>git config --global alias.last &#39;log -1&#39;</code><br><code>git config --global alias.lg &quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;</code></p><h1 id="删除配置的别名"><a href="#删除配置的别名" class="headerlink" title="删除配置的别名"></a>删除配置的别名</h1><p>git仓库配置在<code>.git/config</code>文件中,删除<code>[alias]</code>下配置的别名<br>当前用户git目录在用户主目录下的一个隐藏文件<code>.gitconfig</code>中,删除<code>[alias]</code>下配置的别名</p><h1 id="搭建git服务器"><a href="#搭建git服务器" class="headerlink" title="搭建git服务器"></a>搭建git服务器</h1><p>1.准备一台<code>linux</code>服务器,拥有<code>sudo</code>权限的账号<br>2.<code>sudo apt-get install git</code> 安装<code>git</code><br>3.<code>sudo adduser git</code> 创建一个git用户,用来运行<code>git</code>服务<br>4.收集所有需要登录的用户的公钥,就是他们自己的<code>id_rsa.pub</code>文件,把所有公钥导入到<code>/home/git/.ssh/authorized_keys</code>文件里,一行一个,如果没有<code>authorized_keys</code>文件直接创建一个<br>5.<code>sudo git init --bare sample.git</code> 初始化git仓库,先选定一个目录作为仓库,然后在该目录下执行这个命令,服务器上<code>git</code>仓库以<code>.git</code>结尾,并且纯粹只是为了共享,只是个裸仓库没有工作区<br>6.编辑<code>/etc/passwd</code>文件,把<code>git:x:1001:1001:,,,:/home/git:/bin/bash改为git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</code>,这样，<code>git</code>用户可以正常通过<code>ssh</code>使用<code>git</code>，但无法登录<code>shell</code>，因为我们为<code>git</code>用户指定的<code>git-shell</code>每次一登录就自动退出<br>7.<code>git clone git@server:/srv/sample.git</code>在本地克隆远程仓库,这里假设远程仓库路径是<code>/srv/sample.git</code><br>8.正常流程开发,提交<br>9.如果团队人员过多,添加公匙费劲,可以用<code>Gitosis</code>来管理公钥,如果要做权限控制,也可以用<code>Gitosis</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LinuxShell脚本编程</title>
      <link href="/2018/12/26/LinuxShell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
      <url>/2018/12/26/LinuxShell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><ul><li><code>.sh</code>后缀的文件,以<code>#!/bin/bash</code>开头</li><li>编辑脚本<code>vim /home/helloworld.sh</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 终端输出hello world</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello world"</span></span><br></pre></td></tr></table></figure></li></ul><p><code>chmod 777 /home/helloworld.sh</code>附加执行权限<br><code>sh /home/helloworld.sh</code>执行(终端打印<code>hello world</code>)</p><hr><h1 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h1><ul><li><code>./hellowrold.sh</code>相对路径执行</li><li><code>/home/helloworld.sh</code>绝对路径执行</li><li><code>sh /home/helloworld.sh</code> <code>sh</code>命令执行</li><li><code>bash /home/helloworld.sh</code> <code>bash</code>命令执行</li></ul><hr><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>系统变量<ul><li><code>set</code>显示当前系统的所有变量</li><li><code>echo $HOME</code>输出系统变量<code>HOME</code>(当前用户根目录)</li></ul></li><li><p>自定义变量</p><ul><li>变量定义规则<ul><li>变量名称可以由字母、数字、下划线组成,但不能以数字开头</li><li>等号两侧不能由空格</li><li>变量名称一般习惯为大写</li><li>双引号和单引号由区别,双引号仅将空格脱意,单引号会将所有特殊字符脱意</li></ul></li><li>定义变量<ul><li><code>SS=hello</code>定义自定义变量<code>SS</code>,值为<code>hello</code></li><li><code>echo $SS</code>输出自定义变量<code>SS</code></li><li><code>unset SS</code>撤销自定义变量<code>SS</code></li><li><code>readonly SS=hello</code>定义静态变量<code>SS</code>,值为<code>hello</code>(静态变量不可修改,只能注销或重启后撤销)</li><li><code>export SS</code>把变量<code>SS</code>提升为全局变量,可供其他<code>shell</code>程序使用</li></ul></li><li>将命令的返回值赋给变量<ul><li><code>A=</code>ls -la<code></code>反引号,运行里面的命令,并把结果返回给变量<code>A</code></li><li><code>A=$(ls -la)</code>等价于反引号,运行里面的命令,并把结果返回给变量<code>A</code></li></ul></li><li>设置环境变量<ul><li><code>export 变量名=变量值</code>设置环境变量的值,全局都可以使用</li><li><code>source 配置文件</code>让修改后的值立即生效</li><li><code>echo $变量名</code>查询环境变量的值</li></ul></li><li><p>位置参数变量</p><ul><li><code>$n</code> <code>n</code>为数字,<code>$0</code>代表命令本身,<code>$1-$9</code>代表第1-9个参数,十以上的参数用大括号包含<code>${10}</code></li><li><code>$*</code>代表命令行中所有参数,<code>$*</code>把所有参数看成一个整体</li><li><code>$@</code>代表命令行中所有参数,<code>$@</code>把每个参数区分对待</li><li><code>$#</code>代表命令行中所有参数的个数</li><li>例子:<code>vim /home/echoParams.sh</code>,保存后授权:<code>chmod 777 /home/echoParams.sh</code>,执行<code>/home/echoParams.sh param1 param2</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 输出第一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line"><span class="comment"># 输出第二个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line"><span class="comment"># 输出所有参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"$*"</span></span><br><span class="line"><span class="comment"># 输出所有参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"><span class="comment"># 输出所有参数的个数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$#</span>"</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>系统进程变量</p><ul><li><code>$$</code>获取当前进程的进程号(<code>pid</code>)</li><li><code>$!</code>获取后台运行的最后一个进程的进程号(<code>pid</code>)</li><li><code>$?</code>获取最后一次执行的命令的返回状态<ul><li><code>0</code>:命令正确执行</li><li><code>非0</code>:命令执行不正确(除了<code>0</code>其它数字由命令自己决定)</li></ul></li><li>例子:<code>vim /home/echoPids.sh</code>,保存后授权:<code>chmod 777 /home/echoPids.sh</code>,执行<code>/home/echoPids.sh</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 输出获取当前进程的进程号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"$$"</span></span><br><span class="line"><span class="comment"># 输出后台运行的最后一个进程的进程号</span></span><br><span class="line">/home/echoParams.sh param1 param2 &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"$!"</span></span><br><span class="line"><span class="comment"># 输出最后一次执行的命令的返回状态(0代表正确执行,非0代表没有正确执行)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"$?"</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3></li><li><code></code>命令<code></code>运算命令需要用<code>`</code> `符号包裹</li><li><code>$((运算式))</code>或<code>$[运算式]</code></li><li><code>expr m+n</code>(expr运算符之间要有空格)<ul><li><code>/*</code>乘,<code>/</code>除,<code>%</code>取余(<code>expr</code>运算符需要加<code>/</code>符号)<h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3></li></ul></li><li><p><code>[condition]</code>条件(前后要有空格)</p><ul><li><code>[condition]</code>返回<code>true</code></li><li><code>[]</code>返回<code>false</code></li><li><code>[condition]&amp;&amp;echo OK||echo netok</code>条件满足,执行后面的语句</li><li><code>=</code>字符串比较,<code>-lt</code>小于,<code>-le</code>小于等于,<code>-eq</code>等于,<code>-gt</code>大于,<code>-ge</code>大于等于,<code>-ne</code>不等于(整数比较)</li><li><code>-r</code>有读的权限,<code>-w</code>有写的权限,<code>-x</code>有执行的权限(文件权限判断)</li><li><code>-f</code>文件存在并且是一个常规文件,<code>-e</code>文件存在,<code>-d</code>文件存在并且是一个目录(文件类型判断)<h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3></li><li><p><code>case</code>语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 接收第一个参数</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">"1"</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span></span><br><span class="line"><span class="comment"># 结束当前分支</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">"2"</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"other"</span></span><br><span class="line">;;</span><br><span class="line"><span class="comment"># 结束`case`语句</span></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></li><li><p><code>for</code>语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># $*一次性获取所有参数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"$*"</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$i</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $@分别获取所有参数</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$j</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 累加1-100</span></span><br><span class="line">s=0</span><br><span class="line"><span class="keyword">for</span>((i=1; i&lt;=100; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    s=$[<span class="variable">$s</span>+<span class="variable">$i</span>]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s</span></span><br></pre></td></tr></table></figure></li><li><p><code>while</code>语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 累加1-100</span></span><br><span class="line">s=0</span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 100 ] </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    s=$[<span class="variable">$s</span>+<span class="variable">$i</span>]</span><br><span class="line">    i=$[<span class="variable">$i</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="read读取控制台输入"><a href="#read读取控制台输入" class="headerlink" title="read读取控制台输入"></a>read读取控制台输入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -p接收输入参数,-t指定等待输入时间(秒)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"input your name "</span> NAME1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$NAME1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3秒后不输入NAME2为空</span></span><br><span class="line"><span class="built_in">read</span> -t 3 -p <span class="string">"input your name "</span> NAME2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$NAME2</span></span><br></pre></td></tr></table></figure><h3 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h3><ul><li><p><code>basename</code>(去除路径<code>/</code>(包含<code>/</code>本身)和前面的字符)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">str=`basename /home/basename.sh`</span><br><span class="line"><span class="comment"># 输出basename.sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span></span><br></pre></td></tr></table></figure></li><li><p><code>dirname</code>(去除文件本身,相当于获取绝对路径)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">str=`basename /home/basename.sh`</span><br><span class="line"><span class="comment"># 输出/home</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 计算输入参数的和</span></span><br><span class="line"><span class="comment"># 1.必须在调用之前先声明,(shell脚本是逐行运行,不会像java一样先编译)</span></span><br><span class="line"><span class="comment"># 2.函数返回值,只能通过$?系统变量获得,可以显示加return返回,如果不加将以最后一条命令运行结果作为返回值(return后跟数值n(0-255))</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sum</span></span>()&#123;</span><br><span class="line">   s=0</span><br><span class="line">   s=$[<span class="variable">$1</span>+<span class="variable">$2</span>]</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$s</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Plase input the number1:"</span> n1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Plase input the number2:"</span> n2</span><br><span class="line">sum <span class="variable">$n1</span> <span class="variable">$n2</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2018/12/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/12/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h1><p><code>man</code>获得帮助信息<br><code>help</code>获得shell内置命令的帮助信息</p><hr><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><p>-<code>ctrl + c</code>停止进程<br>-<code>ctrl + i</code>清屏<br>-<code>ctrl + q</code>退出<br>-<code>table</code>自动补全<br>-<code>上下键</code>查找使用过的命令</p><hr><h1 id="文件命令"><a href="#文件命令" class="headerlink" title="文件命令"></a>文件命令</h1><ul><li><code>pwd</code>查看当前目录的绝对路径</li><li><code>ls</code>列出目录内容</li><li><code>ls -a</code>列出目录内容,连同隐藏(<code>.</code>开头的文件)一起列出</li><li><code>ll</code>列出目录内容(包含属性和权限信息)</li><li><code>ls -al</code>列出全部目录内容(包含隐藏文件,属性和权限信息)</li><li><code>mkdir</code>创建目录</li><li><code>mkdir -p</code>创建多层目录</li><li><code>touch</code>创建空文件</li><li><code>cd</code>切换目录<ul><li><code>cd ~</code>切换到用户根目录</li><li><code>cd -</code>切换到上次所在目录</li><li><code>cd ..</code>切换到上级目录</li><li><code>cd -P</code>跳转到实际物理路径,而非快捷方式路径</li></ul></li><li><code>cp</code>复制文件或目录</li><li><code>rmdir</code>删除空目录</li><li><code>rm</code>删除文件</li><li><code>rm -rf</code>递归删除文件或目录</li><li><code>cp</code>复制文件或目录</li><li><code>cp -r</code>递归复制</li><li><code>mv</code>移动文件或重命名文件</li><li><code>mv -t</code>递归移动文件</li><li><code>cat</code>查看文件<code>-n</code>列出行号(从第一行开始)</li><li><code>tac</code>查看文件<code>-n</code>列出行号(从最后一行开始)</li><li><code>more</code>查看文件(一页一页展示,空格或<code>=</code>或<code>ctrl + f</code>下一页,<code>ctrl + b</code>上一页,<code>n</code>显示行号)</li><li><code>less</code>查看文件(<code>pageup</code> + <code>pagedown</code>翻页,<code>q:</code>退出,<code>/</code>或<code>?</code>搜索,<code>n</code>或<code>N</code>向上/向下查找搜索词语)</li><li><code>head -n 行数</code>查看指定行数的文件内容</li><li><code>tail -n 行数</code>查看文件内容,只看尾巴几行,<code>-f</code>实时追踪该文档的所有更新</li><li><code>&gt;</code>覆盖写</li><li><code>&gt;&gt;</code>追加写</li><li><code>echo</code>输出变量</li><li><code>ln -s 软链接名称 链接目录</code>创建软链接(相当于<code>windows</code>快捷方式)</li><li><code>cd -P</code>进入软链接实际目录</li><li><code>history</code>查看命令行历史</li></ul><hr><h1 id="vi编辑命令"><a href="#vi编辑命令" class="headerlink" title="vi编辑命令"></a>vi编辑命令</h1><ul><li>一般模式<ul><li><code>yy</code>复制光标当前一行</li><li><code>y数字y</code>复制一段(从第几行到第几行)</li><li><code>p</code>箭头移动到目的行粘贴</li><li><code>u</code>撤销上一步</li><li><code>dd</code>删除光标当前行</li><li><code>d数字行d</code>删除光标之后多少行(包含光标所在行)</li><li><code>x</code>删除一个字母,相当于<code>del</code></li><li><code>X</code>删除一个字母,相当于<code>Backspace</code></li><li><code>yw</code>复制一个词</li><li><code>dw</code>删除一个词</li><li><code>shift + ^</code>移动到行头</li><li><code>shift + $</code>移动到行尾</li><li><code>数字 + shift + g</code>移动到目标行</li><li><code>1 + shift + g</code>移动到页头</li><li><code>shift + g</code>移动到页尾</li></ul></li><li>编辑模式<ul><li><code>i</code>当前光标前</li><li><code>a</code>当前光标后</li><li><code>o</code>当前光标的下一行</li><li><code>Esc</code>退出编辑模式</li></ul></li><li>指令模式<ul><li><code>:</code>后输入(组合使用)<ul><li><code>w</code>保存</li><li><code>q</code>退出</li><li><code>!</code>强制</li></ul></li><li><code>n</code>后输入(组合使用)<ul><li><code>/查找词语</code>,查找之后<code>n</code>查找下一个,<code>shift + n</code>查找上一个</li><li><code>?查找词语</code>,查找之后<code>n</code>查找上一个,<code>shift + n</code>查找下一个</li></ul></li></ul></li></ul><hr><h1 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h1><ul><li><code>date</code>显示当前时间</li><li><code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code>按特定格式显示当前时间</li><li><code>date -d &quot;next day&quot;</code>显示明天时间</li><li><code>date -d &quot;yesterday&quot;</code>显示昨天时间</li><li><code>date -d &quot;next week&quot;</code>显示下周时间</li><li><code>date -d &quot;next monday&quot;</code>显示下周一时间</li><li><code>date -s &quot;2018-12-12 00:00:00&quot;</code>设置系统时间</li><li><code>cal</code>查看当前月日历</li><li><code>cal -3</code>查看最近三个月的日历</li><li><code>cal 2018</code>查看年份日历</li></ul><hr><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><ul><li><code>useradd</code>添加新用户</li><li><code>passwd</code>设置密码</li><li><code>id</code>判断用户是否存在</li><li><code>su</code>切换用户</li><li><code>userdel</code>删除用户但保存用户目录</li><li><code>userdel -r</code>删除用户和用户目录</li><li><code>who</code>查看登录用户信息</li><li><code>whoami</code>显示当前使用的用户名称</li><li><code>who am i</code>显示登录用户名称</li><li><code>usermod</code>修改用户<code>-g</code> 组名 用户名</li><li>赋予普通用户<code>root</code>权限(如us)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sudoers,root下添加一行如下</span><br><span class="line">##Allow root to run any commands anywhere</span><br><span class="line">root ALL=(ALL) ALL</span><br><span class="line">us ALL=(ALL) ALL</span><br><span class="line">保存后su - us输入密码登录即可获取root权限</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h1><ul><li><code>groupadd</code>新增组</li><li><code>groupdel</code>删除组</li><li><code>groupmod</code>修改组<code>-n</code> 新组名 老组名</li><li><code>cat /etc/group</code>查看创建了哪些组</li></ul><hr><h1 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h1><ul><li><code>-rw-r--r.1 root root 12月12 00:00 file.txt</code></li><li><code>-drwxr-xr-x.2 root root 4096 12月12 00:00 file.txt</code></li></ul><table><thead><tr><th>整体描述</th><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>文件权限</td><td>第1位<code>-</code></td><td>文件</td></tr><tr><td>文件权限</td><td>第1位<code>d</code></td><td>文件夹</td></tr><tr><td>用户主权限</td><td>第2-4位<code>r</code></td><td>读</td></tr><tr><td>用户主权限</td><td>第2-4位<code>w</code></td><td>写</td></tr><tr><td>用户主权限</td><td>第2-4位<code>x</code></td><td>执行</td></tr><tr><td>用户主权限</td><td>第2-4位<code>-</code></td><td>没有权限</td></tr><tr><td>用户组权限</td><td>第5-7位<code>r</code></td><td>读</td></tr><tr><td>用户组权限</td><td>第5-7位<code>w</code></td><td>写</td></tr><tr><td>用户组权限</td><td>第5-7位<code>x</code></td><td>执行</td></tr><tr><td>用户组权限</td><td>第5-7位<code>-</code></td><td>没有权限</td></tr><tr><td>其他用户权限</td><td>第8-10位<code>r</code></td><td>读</td></tr><tr><td>其他用户权限</td><td>第8-10位<code>w</code></td><td>写</td></tr><tr><td>其他用户权限</td><td>第8-10位<code>x</code></td><td>执行</td></tr><tr><td>其他用户权限</td><td>第8-10位<code>-</code></td><td>没有权限</td></tr><tr><td>链接数</td><td>第11位<code>2</code></td><td>链接数</td></tr><tr><td>文件拥有者</td><td>第12位<code>root</code></td><td>文件拥有者</td></tr><tr><td>用户组</td><td>第13位<code>root</code></td><td>用户组</td></tr><tr><td>文件大小</td><td>第14位<code>4096</code></td><td>文件大小</td></tr><tr><td>创建时间</td><td>第15位<code>12月12 00:00</code></td><td>创建时间</td></tr><tr><td>文件名称</td><td>第16位<code>file.txt</code></td><td>文件名称</td></tr></tbody></table><ul><li><p><code>chmod</code>改变文件权限</p><ul><li><code>字符方式</code><ul><li><code>chmod u+x</code>对用户设置执行权限</li><li><code>chmod g-w</code>对用户组设置只读权限</li><li><code>chmod o+w</code>对其他用户设置写权限</li><li><code>chmod a+x</code>对所有人设置执行权限</li></ul></li><li><p><code>数字方式</code></p><ul><li><code>rwx</code>对应<code>111</code>二进制,十进制表示为<code>7</code></li><li><code>111 = 7</code>,<code>110 = 6</code>,<code>100 = 4</code>,<code>1</code>代表有权限,<code>0</code>代表没有权限</li><li><code>chmod</code>第一位数字表示用户权限,第二位数字表示用户组权限,第三位数字表示其他用户权限(十进制)</li><li><code>chmod 777</code>对所有人设置读写和执行权限</li><li><code>chmod 700</code>对用户设置读写和执行权限</li><li><code>chmod 200</code>对用户设置写权限</li><li><code>chmod 660</code>对用户和用户组设置读和执行权限</li></ul></li><li><p><code>chown root</code>改变文件所有者为<code>root</code>(<code>root</code>用户操作)</p></li><li><code>chgrp root</code>改变文件所有组为<code>root</code>(<code>root</code>用户操作)</li></ul></li></ul><hr><h1 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h1><ul><li><code>fdisl -l</code>查看分区详情(<code>root</code>用户操作)</li><li><code>df -h</code>查看硬盘详情</li><li><code>mount/umount</code>挂载/卸载</li><li><code>mount -t iso9660 -o rw /dev/cdrom /mnt/cdrom</code>挂载<code>iso</code>镜像到指定目录</li><li><code>-t</code>表示输入,<code>iso9960</code>表示类型,<code>-o</code>表示输出,<code>rw</code>表示读写,文件目录,挂载目录</li><li><code>umount /mnt/cdrom</code>卸载</li></ul><hr><h1 id="搜索查找"><a href="#搜索查找" class="headerlink" title="搜索查找"></a>搜索查找</h1><p><code>find</code>查找文件或目录<br><code>find /home -name &quot;*.txt&quot;</code>查找<code>home</code>目录下后缀为<code>.txt</code>的文件<br><code>find /home -user root</code>查找<code>home</code>目录下所属<code>root</code>用户的文件<br><code>find /home -size +10</code>查找<code>home</code>目录下大于10的文件(<code>+n</code>大于,<code>-n</code>小于,<code>n</code>等于)<br><code>grep</code>输出文件内搜索字符串匹配的行<br><code>ls -l | grep ll.txt</code>查找当前目录下的<code>ll.txt</code>文件(<code>-n</code>输出行数)<br><code>which</code>查找命令所在目录<br><code>which ls</code>查找<code>ls</code>命令所在目录</p><hr><h1 id="进程线程"><a href="#进程线程" class="headerlink" title="进程线程"></a>进程线程</h1><ul><li><code>ps -aux</code>查看系统中所有进程</li><li><code>top</code>查看系统健康状态(<code>-d</code>设置刷新秒数,<code>q</code>退出)</li><li><code>pstree</code>查看进程树(<code>-u</code>显示进程所属用户,<code>-p</code>显示进程<code>id</code>号)</li><li><code>kill -9 pid</code>立即杀死进程</li><li><code>netstat -anp</code>显示网络统计信息</li></ul><hr><h1 id="压缩解压缩"><a href="#压缩解压缩" class="headerlink" title="压缩解压缩"></a>压缩解压缩</h1><ul><li><code>gzip</code>压缩文件(只能压缩单独一个文件,不保留源文件)</li><li><code>gunzip</code>解压缩文件(只能解压单独一个文件,不保留源文件)</li><li><code>zip demo a.txt b.txt</code>压缩文件(可以压缩多个文件,保留源文件)</li><li><code>unzip demo.zip</code>解压缩文件(可以解压多个文件,保留源文件)</li><li><code>tar -zcvf demo.tar.gz a.txt b.txt</code>压缩文件</li><li><code>tar -zvxf demo.tar.gz</code>压缩到当前目录</li><li><code>tar -zvxf demo.tar.gz -C /home</code>压缩到指定目录</li><li><code>-c</code>产生<code>.tar</code>打包文件,<code>-v</code>显示详细信息,<code>-f</code>指定压缩后的文件名,<code>-z</code>打包同时压缩,<code>-x</code>解压<code>.tar</code>文件</li></ul><hr><h1 id="后台服务管理"><a href="#后台服务管理" class="headerlink" title="后台服务管理"></a>后台服务管理</h1><ul><li><code>service network status</code>查看指定服务状态</li><li><code>service network stop</code>停止指定服务</li><li><code>service network start</code>启动指定服务</li><li><code>service network restart</code>重启指定服务</li><li><code>service --status -all</code>查看系统中的所有后台服务</li><li><code>chkconfig</code>查看所有服务器自启配置</li><li><code>chkconfig iptables off</code>关闭指定服务的自动启动</li><li><code>chkconfig iptables on</code>开启指定服务的自动启动</li></ul><hr><h1 id="系统定时任务"><a href="#系统定时任务" class="headerlink" title="系统定时任务"></a>系统定时任务</h1><ul><li><code>crontab -e</code>编辑<code>crontab</code>定时任务</li><li><code>crontab -l</code>查询<code>crontab</code>定时任务</li><li><code>crontab -r</code>删除当前用户的所有<code>crontab</code>定时任务</li><li><code>* * * * * echo &quot;hello&quot; &gt;&gt; /home/hello.txt</code>执行定时任务</li></ul><table><thead><tr><th>字符</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第1个<code>*</code></td><td>一天当中的第几分钟</td><td>0-59</td></tr><tr><td>第2个<code>*</code></td><td>一天当中的第几小时</td><td>0-23</td></tr><tr><td>第3个<code>*</code></td><td>一个月当中的第几天</td><td>1-31</td></tr><tr><td>第4个<code>*</code></td><td>一年当中的第几月</td><td>1-12</td></tr><tr><td>第5个<code>*</code></td><td>一周当中的星期几</td><td>0-7(0和7都代表星期日)</td></tr></tbody></table><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td><code>*</code></td><td>代表任何时间,比如第一个“*”就代表一小时中每分钟都执行一次的意思</td></tr><tr><td><code>,</code></td><td>代表不连续的时间,比如“0 8,12,16 <em> </em> * 命令”，就代表在每天的8点0分，12点0分，16点0分都执行一次命令</td></tr><tr><td><code>-</code></td><td>代表连续的时间范围。比如“0 5  <em>  </em>  1-6命令”，代表在周一到周六的凌晨5点0分执行命令</td></tr><tr><td><code>*/n</code></td><td>代表每隔多久执行一次。比如“<em>/10  </em>  <em>  </em>  *  命令”，代表每隔10分钟就执行一遍命令</td></tr></tbody></table><table><thead><tr><th>时间</th><th>特定时间执行命令</th></tr></thead><tbody><tr><td><code>45 22 * * *</code></td><td>在22点45分执行命令</td></tr><tr><td><code>0 17 * * 1</code></td><td>每周1 的17点0分执行命令</td></tr><tr><td><code>0 5 1,15 * *</code></td><td>每月1号和15号的凌晨5点0分执行命令</td></tr><tr><td><code>40 4 * * 1-5</code></td><td>每周一到周五的凌晨4点40分执行命令</td></tr><tr><td><code>*/10 4 * * *</code></td><td>每天的凌晨4点，每隔10分钟执行一次命令</td></tr><tr><td><code>0 0 1,15 * 1</code></td><td>每月1号和15号，每周1的0点0分都会执行命令。注意：星期几和几号最好不要同时出现，因为他们定义的都是天。非常容易让管理员混乱</td></tr></tbody></table><hr><h1 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h1><ul><li><code>rpm -qa</code>查询所安装的所有软件包</li><li><code>rpm -e firefox-45.0.1-1.el6.centos.x86_64</code>卸载软件包</li><li><code>rpm -e --nodeps firefox-45.0.1-1.el6.centos.x86_64</code>卸载软件包(不检测依赖)</li><li><code>rpm –ivh firefox-45.0.1-1.el6.centos.x86_64</code>安装软件包</li><li><code>rpm –ivh --nodeps firefox-45.0.1-1.el6.centos.x86_64</code>安装软件包(不检测依赖)</li><li><code>-i</code>安装,<code>-v</code>显示详细信息,<code>-h</code>显示进度条,<code>--nodeps</code>不检测依赖进度</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux基础配置</title>
      <link href="/2018/12/24/Linux%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/12/24/Linux%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="国内Centos镜像"><a href="#国内Centos镜像" class="headerlink" title="国内Centos镜像"></a>国内Centos镜像</h1><ul><li><a href="http://mirrors.163.com/centos/6/isos/" target="_blank" rel="noopener">网易镜像</a></li><li><a href="http://mirrors.sohu.com/centos/6/isos/" target="_blank" rel="noopener">搜狐镜像</a></li></ul><hr><h1 id="VmWare破解密匙"><a href="#VmWare破解密匙" class="headerlink" title="VmWare破解密匙"></a>VmWare破解密匙</h1><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MA491<span class="number">-6</span>NL5Q-AZAM0-ZH0N2-AAJ5A</span><br><span class="line"><span class="number">5</span>A6F6<span class="number">-88247</span>-XZH59-HL0Q6<span class="number">-8</span>CD2V</span><br><span class="line">HF6QX<span class="number">-20187</span><span class="number">-2</span>Z391<span class="number">-522</span>NH<span class="number">-9</span>AELT</span><br><span class="line"><span class="number">5</span>F29M<span class="number">-48312</span><span class="number">-8</span>ZDF9-A8A5K<span class="number">-2</span>AM0Z</span><br></pre></td></tr></table></figure><hr><h1 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/bin</span>：是Binary的缩写，这个目录存放着系统必备执行命令</span><br><span class="line"><span class="string">/boot</span>：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件，自己的安装别放这里</span><br><span class="line"><span class="string">/dev</span>：Device<span class="params">(设备)</span>的缩写，该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</span><br><span class="line"><span class="string">/etc</span>：所有的系统管理所需要的配置文件和子目录。</span><br><span class="line"><span class="string">/home</span>：存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</span><br><span class="line"><span class="string">/lib</span>：系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</span><br><span class="line"><span class="string">/lost</span>+found：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</span><br><span class="line"><span class="string">/media</span>：linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</span><br><span class="line"><span class="string">/misc</span>: 该目录可以用来存放杂项文件或目录，即那些用途或含义不明确的文件或目录可以存放在该目录下。</span><br><span class="line"><span class="string">/mnt</span>：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在<span class="string">/mnt/</span>上，然后进入该目录就可以查看光驱里的内容了。</span><br><span class="line"><span class="string">/net</span>  存放着和网络相关的一些文件.</span><br><span class="line"><span class="string">/opt</span>：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</span><br><span class="line"><span class="string">/proc</span>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</span><br><span class="line"><span class="string">/root</span>：该目录为系统管理员，也称作超级权限者的用户主目录。</span><br><span class="line"><span class="string">/sbin</span>：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</span><br><span class="line"><span class="string">/selinux</span>：这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙</span><br><span class="line"><span class="string">/srv</span>：service缩写，该目录存放一些服务启动之后需要提取的数据。</span><br><span class="line"><span class="string">/sys</span>： 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。</span><br><span class="line"><span class="string">/tmp</span>：这个目录是用来存放一些临时文件的。</span><br><span class="line"><span class="string">/usr</span>： 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。</span><br><span class="line"><span class="string">/var</span>：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</span><br></pre></td></tr></table></figure><hr><h1 id="配置静态ip和网络"><a href="#配置静态ip和网络" class="headerlink" title="配置静态ip和网络"></a>配置静态ip和网络</h1><ul><li>编辑网卡配置 <code>vi /etc/sysconfig/network-scripts/ifcfg-eth0</code></li><li><p>ip随意,和网关在同一网段即可,主要编辑<strong><em>ONBOOT</em></strong>,<strong><em>BOOTPROTO</em></strong>,<strong><em>IPADDR</em></strong>,<strong><em>GATEWAR</em></strong>,<strong><em>DNS1</em></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=<span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">5</span>D:<span class="number">7</span>B:D1</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=<span class="number">7</span>c705bcf-<span class="number">883f</span>-<span class="number">4841</span>-a374-<span class="number">40</span>d41be299c0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=<span class="keyword">static</span></span><br><span class="line"></span><br><span class="line">IPADDR=<span class="number">192.168</span>.1.10</span><br><span class="line">GATEWAY=<span class="number">192.168</span>.1.2</span><br><span class="line">DNS1=<span class="number">192.168</span>.1.2</span><br></pre></td></tr></table></figure></li><li><p>重启网络服务 <code>service network restart</code></p></li></ul><hr><h1 id="配置主机名称"><a href="#配置主机名称" class="headerlink" title="配置主机名称"></a>配置主机名称</h1><ul><li><code>hostname</code>查看主机名称</li><li><code>hostname name</code>临时修改主机名称(系统重启后失效)</li><li><code>vi /etc/sysconfig/network</code>编辑<code>HOSTNAME master</code>永久修改主机名称(主机名称不要带有<code>_</code>)</li><li><code>vi /etc/hosts</code>编辑<code>192.168.1.10 master</code>配置主机名称映射(主机名称映射到对应ip)</li></ul><hr><h1 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h1><ul><li><code>service iptables status</code>查看防火墙状态</li><li><code>service iptables stop</code>临时关闭防火墙(系统重启后再次开启)</li><li><code>chkconfig iptables --list</code>查看防火墙状态</li><li><code>chkconfig iptables off</code>关闭防火墙开机启动</li><li><code>chkconfig iptables on</code>开启防火墙开机启动<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Linux系统有<span class="number">7</span>个运行级别(runlevel)</span><br><span class="line">运行级别<span class="number">0</span>：系统停机状态，系统默认运行级别不能设为<span class="number">0</span>，否则不能正常启动</span><br><span class="line">运行级别<span class="number">1</span>：单用户工作状态，root权限，用于系统维护，禁止远程登陆</span><br><span class="line">运行级别<span class="number">2</span>：多用户状态(没有NFS)</span><br><span class="line">运行级别<span class="number">3</span>：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</span><br><span class="line">运行级别<span class="number">4</span>：系统未使用，保留</span><br><span class="line">运行级别<span class="number">5</span>：X11控制台，登陆后进入图形GUI模式</span><br><span class="line">运行级别<span class="number">6</span>：系统正常关闭并重启，默认运行级别不能设为<span class="number">6</span>，否则不能正常启动</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h1><ul><li>正确的关机流程为:<code>sync &gt; shutdown &gt; reboot &gt; halt</code></li><li><code>sync</code>数据由内存同步到硬盘中</li><li><code>shutdown</code>[选项]时间<code>-h</code>关机,<code>-r</code>重启(<code>shutdown -r 1 &quot;1 分钟后重启&quot;</code>)</li><li><code>halt</code>关闭系统,等同于<code>shutdown –h now</code>和<code>poweroff</code></li><li><code>reboot</code>重启,等同于<code>shutdown –h now</code></li><li>关机或重启先执行<code>sync</code>持久化内存数据</li></ul><hr><h1 id="配置中文编码"><a href="#配置中文编码" class="headerlink" title="配置中文编码"></a>配置中文编码</h1><ul><li>查看编码<code>cat /etc/sysconfig/i18n</code></li><li>修改编码以<code>root</code>用户编辑<code>/etc/sysconfig/i18n</code><ul><li>安装系统为中文系统,修改<code>LANG=&quot;zh_CN.UTF-8&quot;</code></li><li>安装系统为英文系统，则修改<code>LANG=&quot;en_US.UTF-8&quot;</code></li><li>使用<code>xShell</code>或其它工具连接,可以修改终端显示编码为<code>utf-8</code></li></ul></li></ul><hr><h1 id="配置yum仓库"><a href="#配置yum仓库" class="headerlink" title="配置yum仓库"></a>配置yum仓库</h1><h3 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h3><ul><li><code>yum install -y httpd</code>安装<code>httpd</code>并确认安装</li><li><code>yum list</code>列出所有可用的<code>package</code>和<code>package</code>组</li><li><code>yum clean all</code>清除所有缓冲数据</li><li><code>yum deplist httpd</code>功能描述：列出一个包所有依赖的包</li><li><code>yum remove httpd</code>删除<code>httpd</code><h3 id="配置国内仓库镜像-以Centos6为例"><a href="#配置国内仓库镜像-以Centos6为例" class="headerlink" title="配置国内仓库镜像(以Centos6为例)"></a>配置国内仓库镜像(以Centos6为例)</h3></li><li><a href="http://mirrors.163.com/.help/centos.html" target="_blank" rel="noopener">国内镜像地址</a>下载<code>CentOS5</code>或<code>CentOS6</code>或<code>CentOS7</code></li><li><code>mv CentOS6-Base-163.repo /etc/yum.repos.d/</code>移动文件到<code>/etc/yum.repos.d</code>目录</li><li><code>mv CentOS6-Base-163.repo  CentOS-Base.rep</code>用<code>CentOS6-Base-163.repo</code>替换<code>CentOS-Base.rep</code></li><li><code>cd /etc/yum.repos.d/</code>,<code>cp CentOS-Base.repo  CentOS-Base.repo.bak</code>备份原有的<code>yum</code>源配置文件</li><li><p><code>vi CentOS-Base.repo</code>配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>=CentOS-<span class="variable">$releasever</span> - Base - <span class="number">163</span>.com</span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.<span class="number">163</span>.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.centos.org/centos/RPM-GPG-KEY-CentOS-<span class="number">6</span></span><br></pre></td></tr></table></figure></li><li><p><code>yum clean all</code>,<code>yum makecache</code>依次执行完成安装</p><h3 id="配置本地仓库镜像"><a href="#配置本地仓库镜像" class="headerlink" title="配置本地仓库镜像"></a>配置本地仓库镜像</h3><ul><li>准备一台<code>Linux</code>服务器,版本<code>CentOS-6.8-x86_64-bin-DVD1.iso</code>,配置好服务器<code>ip</code></li><li><code>mkdir /mnt/cdrom</code>,<code>mount -t iso9660 /dev/cdrom /mnt/cdrom</code>将<code>CentOS-6.8-x86_64-bin-DVD1.iso</code>镜像挂载到<code>/mnt/cdrom</code>目录</li><li><code>cd /etc/yum.repos.d/</code>,<code>cp CentOS-Base.repo  CentOS-Base.repo.bak</code>备份原有的<code>yum</code>源配置文件</li><li><p><code>vi CentOS-Base.repo</code>编辑<code>CentOS-Base.repo</code>文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[base]</span></span><br><span class="line"><span class="comment"># 配置本地镜像仓库</span></span><br><span class="line"><span class="attr">name</span>=CentOS-Local</span><br><span class="line"><span class="attr">baseurl</span>=file:///var/iso</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-<span class="number">6</span></span><br></pre></td></tr></table></figure></li><li><p><code>yum clean all</code>清除<code>yum</code>缓冲</p></li><li><code>yum repolist</code>列出可用的<code>yum</code>源</li><li><code>yum install -y httpd</code>安装相应的软件</li><li><code>yum.repos.d]#service httpd start</code>开启<code>httpd</code>使用浏览器访问<a href="http://192.168.11.101:80" target="_blank" rel="noopener">访问地址,以实际<code>ip</code>为准</a>如果访问不通,检查防火墙是否开启了80端口或关闭防火墙</li><li><code>cp -r /mnt/cdrom/ /var/www/html/CentOS</code>将<code>yum</code>源配置到<code>httpd(Apache Server)</code>中，其他的服务器即可通过网络访问这个内网中的<code>yum</code>源了</li><li><code>umount /mnt/cdrom</code>取消先前挂载的镜像</li><li><code>http://192.168.11.101/CentOS/</code>浏览器中访问</li><li><code>cd /etc/yum.repos.d/</code>,<code>cp CentOS-Base.repo  CentOS-Base.repo.bak</code>备份使用机器上的<code>yum</code>源</li><li><p><code>vi CentOS-Base.repo</code>让其他需要安装<code>rpm</code>包的服务器指向这个yum源</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置使用机器</span></span><br><span class="line"><span class="section">[base]</span></span><br><span class="line"><span class="attr">name</span>=CentOS-hadoop101</span><br><span class="line"><span class="attr">baseurl</span>=http://<span class="number">192.168</span>.<span class="number">11.101</span>/CentOS</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-<span class="number">6</span></span><br></pre></td></tr></table></figure></li><li><p><code>yum clean all</code>,<code>yum repolist</code>使用机器上执行更新配置 </p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2018/12/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2018/12/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">...以此类推最多六级</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><hr><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>列表1</span><br><span class="line"><span class="bullet">- </span>列表2</span><br><span class="line"><span class="bullet">- </span>列表3</span><br></pre></td></tr></table></figure><ul><li>列表1</li><li>列表2<br>子列表1<br>子列表2</li><li>列表3</li></ul><hr><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接</span>](<span class="link">https://github.com/2500639734</span>)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/2500639734" target="_blank" rel="noopener">链接</a></p><hr><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片</span>](<span class="link">https://www.baidu.com/img/baidu_jgylogo3.gif</span>)</span><br></pre></td></tr></table></figure><p><img src="https://www.baidu.com/img/baidu_jgylogo3.gif" alt="图片"></p><hr><h1 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*斜体*</span></span><br></pre></td></tr></table></figure><p><em>斜体</em></p><h1 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*<span class="strong">*粗体*</span><span class="strong">*</span></span><br></pre></td></tr></table></figure><p><strong>粗体</strong></p><hr><h1 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] arrs)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"单行代码左右分别使用一个`符号包裹"</span>);</span><br><span class="line">System.out.println(<span class="string">"多行上下分别使用三个```符号包裹"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 引用</span></span><br></pre></td></tr></table></figure><blockquote><p>引用</p></blockquote><hr><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">---或者***</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
